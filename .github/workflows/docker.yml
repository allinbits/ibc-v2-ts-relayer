name: Docker Build and Push
on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, "ci/docker", "ops/dev-env" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-chains:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      packages: write
    strategy:
      matrix:
        chain: [mars, venus]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check for changes in chain directory
      id: changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          chain:
            - 'docker/chains/${{ matrix.chain }}/**'

    - name: Set up Docker Buildx
      if: steps.changes.outputs.chain == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: steps.changes.outputs.chain == 'true' && github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      if: steps.changes.outputs.chain == 'true'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.chain }}
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=latest

    - name: Build and push Docker image
      if: steps.changes.outputs.chain == 'true'
      uses: docker/build-push-action@v5
      with:
        context: docker/chains/${{ matrix.chain }}
        # push: ${{ github.event_name != 'pull_request' }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
